TranslationUnit
| block = Block
| | vardecls = TypedIdentList
| | funcdecls = FuncDeclList
| | statement = CompoundStatement
| | | compound_statement = StatementList
| | | | WriteStatement
| | | | | write_expression = BooleanFactor
| | | | | | boolean_value = true
| | | | WriteStatement
| | | | | write_expression = BooleanFactor
| | | | | | boolean_value = false
| | | | WriteStatement
| | | | | write_expression = UnaryExpression
| | | | | | unary_op = NOT
| | | | | | unary_expression = BooleanFactor
| | | | | | | boolean_value = true
| | | | WriteStatement
| | | | | write_expression = UnaryExpression
| | | | | | unary_op = NOT
| | | | | | unary_expression = BooleanFactor
| | | | | | | boolean_value = false
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = LT
| | | | | | binary_left = NumberFactor
| | | | | | | number_value = 1
| | | | | | binary_right = NumberFactor
| | | | | | | number_value = 0
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = AND
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = true
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = true
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = AND
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = true
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = false
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = AND
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = false
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = true
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = AND
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = false
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = false
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = OR
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = true
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = true
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = OR
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = true
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = false
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = OR
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = false
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = true
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = OR
| | | | | | binary_left = BooleanFactor
| | | | | | | boolean_value = false
| | | | | | binary_right = BooleanFactor
| | | | | | | boolean_value = false
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = LT
| | | | | | binary_left = NumberFactor
| | | | | | | number_value = 1
| | | | | | binary_right = NumberFactor
| | | | | | | number_value = 2
| | | | WriteStatement
| | | | | write_expression = BinaryExpression
| | | | | | binary_op = GT
| | | | | | binary_left = NumberFactor
| | | | | | | number_value = 1
| | | | | | binary_right = NumberFactor
| | | | | | | number_value = 2
